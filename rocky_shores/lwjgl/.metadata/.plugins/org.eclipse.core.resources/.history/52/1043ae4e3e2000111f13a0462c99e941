import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.GL11;

import static org.lwjgl.util.glu.GLU.*;
import static org.lwjgl.opengl.GL11.*;

public class Lwjgl_Test {
	private final int WIDTH = 640, HEIGHT = 480;
	private int trir = 0;
	
	public static void main(String [] args){
		new Lwjgl_Test();
	}
	
	public Lwjgl_Test(){
		initRender();
		loop();
	}
	
	public void initRender(){
		try {
			Display.setDisplayMode(new DisplayMode(WIDTH, HEIGHT));
			Display.create();
		} catch (LWJGLException e) {}
		
		glMatrixMode(GL_PROJECTION);
		glLoadIdentity();
		gluPerspective(45.0f, WIDTH / HEIGHT, 0.1f, 100.0f);
		glMatrixMode(GL_MODELVIEW);
	}
	
	public void loop(){
		while(!Display.isCloseRequested()){
			update();
			render();
			Display.update();
		}
	}
	
	public void update(){
		
	}
	
	public void render(){
		GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
		
		glTranslatef(0.0f, 0.0f, -8.0f);
		glRotatef(trir, 0.0f, 1.0f, 0.0f);
		//front
		glBegin(GL_TRIANGLES);
			glColor3f(1.0f, 0.0f, 0.0f);
			glVertex3f();
		glEnd();
	}
}

/*
 * import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.GL11;

import static org.lwjgl.util.glu.GLU.*;
import static org.lwjgl.opengl.GL11.*;

public class Lwjgl_Test {
	private final int WIDTH = 640, HEIGHT = 480;
	private int rotation = 0;
	
	public static void main(String [] args){
		new Lwjgl_Test();
	}
	
	//CONSTRUCTOR
	public Lwjgl_Test(){
		initView();
		loop();
	}
	
	public void initView(){
		try {
			Display.setDisplayMode(new DisplayMode(WIDTH, HEIGHT));
			Display.create();
		} catch (LWJGLException e) {}
		
		glMatrixMode(GL_PROJECTION);
		glLoadIdentity();
		gluPerspective(45.0f, WIDTH / HEIGHT, 100f, 0.1f);
		glMatrixMode(GL_MODELVIEW);
	}
	
	public void loop(){
		while(!Display.isCloseRequested()){
			update();
			render();
			Display.update();
		}
	}
	
	public void update(){
		
	}
	
	public void render(){
		
	}
}
*/
